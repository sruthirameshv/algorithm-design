#+TITLE: Chapter 1 Exercises, Algorithm Design Manual
#+AUTHOR: Jon Childress

* Finding Counter-examples
** 1-1: [3] Show that a + b can be less than min(a,b)

   a = -1
   b = -1
   a + b = -2
   min(a,b) = -1
   -2 < -1 ∎

** 1-3: [5] Design/draw a road network with two points a and b such that the fastest route between a and b is not he shortest route

   a----4mph-----b
    \           /
     \_100mph__/

* Proofs of Correctness
** 1-7: [3] Prove the correctness of the following recursive algorithm to multiply two natural numbers, for all integer constants c ≥ 2

   function multiply(y,z)
     comment: Return the product yz
       1. if z = 0 then return(0) else
       2. return(multiply(cy, ⌊z/c⌋) + y * (z mod c))

*** Solution:

for case c >= 2, y >= 0, z = 0 should = 0 (this is obviously correct)
for case c >= 2, y >=0, z = n + 1 should = y(n + 1)

    A = multiply(cy, ⌊(n + 1)/c⌋)
    B = y * ((n + 1) mod c)

    A + B must = y(n + 1)

    A = 
* Induction
** 1-10: [3] Prove that [summation i=1] i = n(n + 1)/2 for n >= 0, by induction

   for case n = 0, 0 = obviously 0
   assume it's true for case n = n
   for case n = n + 1, roll out the largest term...

   (n + 1) + n(n + 1)/2 = (n + 1)(n + 2)/2
   2(n + 1) + n(n + 1)  = (n + 1)(n + 2)
   2n + 2 + n^2 + n     = n^2 + n + 2n + 2
   n^2 + 3n + 2         = n^2 + 3n + 2

** 1-12: [3] Prove that [summation i=1] i^3 = n^2 * (n + 1)^2/4 for n >= 0, by induction

   for case n = 0, 0 = obviously 0
   assume it's true for case n = n
   for case n = n + 1, roll out the largest term

   (n + 1)^3 + n^2 * (n + 1)^2/4                  = (n + 1)^2 * (n + 2)^2/4
   4(n + 1)^3 + n^2 * (n^2 + 2n + 1)              = (n^2 + 2n + 1) * (n^2 + 4n + 4)
   4(n + 1)(n^2 + 2n + 1) + n^2 * (n^2 + 2n + 1)  = (n^2 + 2n + 1) * (n^2 + 4n + 4)
   4(n + 1) + n^2                                 = (n^2 + 4n + 4)
   n^2 + 4n + 4                                   = n^2 + 4n + 4

* Estimation

  How is this even a thing? I have no idea. Skipping.

* Interview Problems

  See interview_problems.hs

* Implementation Projects

  See implementation_projects.hs
